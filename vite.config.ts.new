import { defineConfig, loadEnv } from 'vite';
import react from '@vitejs/plugin-react';

// Chargement des variables d'environnement
export default defineConfig(({ mode }) => {
  // Charger les variables d'environnement pour ce mode (development, production, etc.)
  const env = loadEnv(mode, process.cwd());
  
  // Extraire le port de l'URL de redirection Auth0 (ou utiliser 5173 par défaut)
  const getPortFromRedirectUri = () => {
    try {
      const redirectUri = env.VITE_AUTH0_REDIRECT_URI || '';
      const url = new URL(redirectUri);
      return parseInt(url.port) || 5173;
    } catch {
      console.warn('Erreur lors de l\'extraction du port depuis VITE_AUTH0_REDIRECT_URI, utilisation du port 5173 par défaut');
      return 5173;
    }
  };
  
  const port = getPortFromRedirectUri();
  
  console.log(`Configuration du serveur de développement sur le port ${port} pour correspondre à l'URL de redirection Auth0`);
  
  return {
    plugins: [react()],
    optimizeDeps: {
      exclude: ['lucide-react'],
    },
    server: {
      port,
      strictPort: true, // Force l'utilisation de ce port spécifique
      hmr: {
        overlay: false // Disable HMR overlay to reduce overhead
      },
      watch: {
        usePolling: false // Disable polling
      }
    },
    build: {
      // Optimize build
      target: 'esnext',
      minify: 'esbuild',
      rollupOptions: {
        output: {
          manualChunks: {
            'react-vendor': ['react', 'react-dom', 'react-router-dom'],
            'ui-vendor': ['lucide-react', '@radix-ui/react-tabs', '@radix-ui/react-dialog'],
            'utils-vendor': ['date-fns', 'i18next', 'react-i18next', 'zustand']
          }
        }
      }
    }
  };
});
